-- Module script --
-- Madonox
local rs = game:GetService("RunService")

local MadX_Lib = {}

local config = game.ReplicatedStorage.MadX_Anti.Configuration

local mem = {}
mem.UserInstancesAllowed = {}

MadX_Lib.requestClientData = function(plr)
	if rs:IsServer() then
		if plr then
			local dat = script.Parent.RemoteEvent:FireClient(plr,"clientData")
			if dat then
				return dat
			else
				delay(config.RemoteResponseLimit.Value,function()
					if not dat then
						plr:Kick(config.KickMessage.Value)
					else
						return dat
					end
				end)
			end
		end
	else
		game.Players.LocalPlayer:Kick(config.KickMessage.Value)
	end
end
MadX_Lib.terminatePlayerConnection = function(plr)
	if rs:IsServer() then
		if plr then
			if plr:IsA("Player") then
				game.Workspace[plr.Name]:Destroy()
				script.Parent.RemoteEvent:FireClient(plr,"terminate")
				plr:Destroy()
			end
		end
	else
		game.Players.LocalPlayer:Kick(config.KickMessage.Value)
	end
end
MadX_Lib.validateClient = function(plr)
	if rs:IsServer() then
		if plr then
			if game.ReplicatedStorage.MadX_Anti.RemoteEvent:FireClient(plr,"ping",{}) then
				return "valid"
			else
				plr:Kick(config.KickMessage.Value)
			end
		end
	else
		game.Players.LocalPlayer:Kick(config.KickMessage.Value)
	end
end
MadX_Lib.authorizeInstanceCreation = function(plr,className)
	if rs:IsServer() then
		if plr then
			if mem.UserInstancesAllowed[plr.Name] == nil then
				mem.UserInstancesAllowed[plr.Name] = {}
			end
			table.insert(mem.UserInstancesAllowed[plr.Name],#mem.UserInstancesAllowed[plr.Name]+1,className)
		end
	else
		game.Players.LocalPlayer:Kick(config.KickMessage.Value)
	end
end
MadX_Lib.verifyInstanceCreation = function(plr,className)
	if rs:IsServer() then
		if plr then
			if mem.UserInstancesAllowed[plr.Name] == nil then
				mem.UserInstancesAllowed[plr.Name] = {}
			end
			
			if table.find(mem.UserInstancesAllowed[plr.Name],className) then
				return true
			else
				return false
			end
		end
	else
		game.Players.LocalPlayer:Kick(config.KickMessage.Value)
	end
end
MadX_Lib.unauthorizeInstanceCreation = function(plr,className)
	if rs:IsServer() then
		if plr then
			if table.find(mem.UserInstancesAllowed[plr.Name],className) then
				table.remove(mem.UserInstancesAllowed[plr.Name],table.find(mem.UserInstancesAllowed[plr.Name],className))
			end
		end
	else
		game.Players.LocalPlayer:Kick(config.KickMessage.Value)
	end
end


return MadX_Lib
