-- Server script --

-- Madonox

local MadX_Lib = require(game.ReplicatedStorage.MadX_Anti.MadX_Lib)

local file = game.ReplicatedStorage.MadX_Anti

local func_lib = {}
func_lib.bindAntiCharacter = function(plr,char)
	if char:findFirstChild("Humanoid") then
		char.Humanoid.StateChanged:Connect(function(old,new)
			if old == Enum.HumanoidStateType.Jumping then
				if new == Enum.HumanoidStateType.Jumping then
					plr:Kick(file.Configuration.KickMessage.Value)
				end
			end
		end)
		char.Humanoid.Died:Connect(function()
			if char.Humanoid:GetState() ~= Enum.HumanoidStateType.Dead then
				plr:Kick(file.Configuration.KickMessage.Value)
			else
				if file.Configuration.ExploitConfig.AntiUndead.Enabled.Value == true then
					delay(file.Configuration.ExploitConfig.AntiUndead.AutoRespawnTime.Value,function()
						plr:LoadCharacter()
					end)
				end
			end
		end)
	end
end

function init()
	game.ReplicatedStorage.MadX_Anti.RemoteEvent.OnServerEvent:Connect(function(plr,method,args)
		if plr then
			if method then
				if args then
					if method == "fps_change" then
						if args[1] > 45 then
							plr:Kick("Major FPS change.")
						end
					end
					if method == "self_terminate" then
						MadX_Lib.terminatePlayerConnection(plr)
					end
					if method == "itemAdded" then
						if file.Configuration.ExploitConfig.AntiAvatarMods.Enabled.Value == true then
							if not MadX_Lib.verifyInstanceCreation(plr,args[1].ClassName) then
								plr:Kick(file.Configuration.KickMessage.Value)
							end
						end
					end
				else
					plr:Kick(file.Configuration.KickMessage.Value)
				end
			else
				plr:Kick(file.Configuration.KickMessage.Value)
			end
		end
	end)
	game.Players.PlayerAdded:Connect(function(plr)
		func_lib.bindAntiCharacter(plr,game.Workspace:WaitForChild(plr.Name))
		plr.CharacterAdded:Connect(function()
			func_lib.bindAntiCharacter(plr,game.Workspace:WaitForChild(plr.Name))
		end)
	end)
	
end

init()
